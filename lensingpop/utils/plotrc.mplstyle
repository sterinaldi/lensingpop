# Set the backend, otherwise the figure won't show up. Note that this will 
# depend on your system setup; to see which backend is the default,
# run "matplotlib.get_backend()" in the python interpreter.
#backend                 :  gtk3agg    

# increase the default dpi, and change the file type from png to pdf 
savefig.dpi             :   300
savefig.format          :   pdf
# instead of individually increasing font sizes, point sizes, and line 
# thicknesses, i found it easier to just decrease the figure size so
# that the line weights of various components still agree 
figure.figsize          :   12,8

# turn on minor ticks, top and right axis ticks, and change the direction to "in" 
xtick.top               :   true
ytick.right             :   False
xtick.minor.visible     :   true
ytick.minor.visible     :   true
ytick.direction         :   in
xtick.direction         :   in
            
# increase the major and minor tick-mark lengths 
xtick.major.size        :   6  # default 3.5
ytick.major.size        :   6  # default 3.5
xtick.minor.size        :   3  # default 2 
ytick.minor.size        :   3  # default 2 

# change the tick-mark and axes widths, as well as the widths of plotted lines,
# to be consistent with the font weight 
xtick.major.width       :   1  # default 0.8
ytick.major.width       :   1  # default 0.8
xtick.minor.width       :   1  # default 0.6
ytick.minor.width       :   1  # default 0.6
axes.linewidth          :   1  # default 0.8 
lines.linewidth         :   1  # default 1.5 

# increase the padding between the ticklabels and the axes, to prevent 
# overlap in the lower lefthand corner
xtick.major.pad         :   4  # default 3.5
ytick.major.pad         :   4  # default 3.5 
xtick.minor.pad         :   4  # default 3.5 
ytick.minor.pad         :   4  # default 3.5 
 
# turn off the legend frame and reduce the space between the point and the label  
#legend.frameon          :   false
#legend.handletextpad    :   0.0

xtick.labelsize      : large
ytick.labelsize      : large